using MonteCarlo.Data;
using MonteCarlo.Output;
using System;
using System.Collections.Generic;
using System.Text;

namespace MonteCarlo.Dispatch
{
    public class DispatchHelp : IDispatchProgram
    {
        public void Execute(GenericArgsParser args)
        {
            Write("Version: " + System.Reflection.Assembly.GetCallingAssembly().GetName().Version);

            Write("Program Execution:");
            Write(" - Args: ");
            Write(" 'Help' - Displays this help prompt");
            Write(" 'EvalMethod' - Provides ability to evaluate performance by different means." +
                "  Supported methods: AllYears, RandomOrder");
            Write(" 'InputFile' - The JSON input file that defines the scenario.");
            Write(" 'ReturnsInputFile' - The file used to define the returns.  Overrides input file value.");
            Write(" 'Create' - Creates a sample JSON input file.");
            Write(" 'Output' - The output generated by the program.  " +
                $"Supported modes: {String.Join(", ", Enum.GetNames(typeof(OutputMode))) }.  " +
                "Files outputs many CSVs, one for each simulation.  " +
                "Verbose gives details of each simulation and the two GiantCsv outputs are similar data, but in CSV format.");
            Write("Program Examples:");
            Write(@"program.exe InputFile=""C:\fi\le.json"" EvalMethod=""RandomOrder""");
            Write(@"program.exe -InputFile=""C:\fi\le.json""");
            Write(@"program.exe -Create:""C:\valid\file\path\newFile.json""");
            Write(@"program.exe --help");
            Write(@"program.exe InputFile=""C:\fi\le.json"" EvalMethod=""AllYears"" -Output:GiantCsvConsole");

        }

        public void Write(string write)
        {
            WriteManager.Write(write);
        }
    }
}
